---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogHeader from "../../../components/ui/blogHeader";
import Layout from "../../../layouts/layout.astro";

// Props retained for typing reference
interface Props {
	post: CollectionEntry<"posts">;
}

export async function getStaticPaths() {
	const allPosts = await getCollection("posts");
	return allPosts.map((post) => {
		return {
			params: {
				slug: post.slug,
			},
			props: {
				post,
			},
		};
	});
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" href="/favicon.svg" />
  <meta name="description" content={post.data.title} />
  <meta property="twitter:title" content=" shivam " />
  <meta name="twitter:image" content="https://shivam.ing/images/opengraph-image.png" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:creator" content="@shivamhwp" />
  <meta property="og:title" content={post.data.title || ""} />
  <meta property="og:description" content={post.data.title} />
  <meta property="og:site_name" content="shivam.ing" />
  <meta property="og:url" content="https://www.shivam.ing" />
  <meta property="og:image" content="https://shivam.ing/images/opengraph-image.png" />
  <title>{post.data.title || ""}</title>
</head>
<Layout>
  <div class="flex flex-col  font-normal w-full h-full">
   <BlogHeader
      header={post.data.title}
      updated={post.data.updated?.toString() === "" ? false : true}
      date={post.data.updated?.toString() === ""
        ? post.data?.published
        : post.data?.updated}
    />
    <div class=" text-muted-foreground transition-colors duration-200"><Content /></div>
    <a
    href="/writings"
    class="left-0 w-full h-8 flex items-end justify-end  hover:text-foreground transition-colors duration-200 hover:cursor-pointer"
  >
    ‚Üê back
  </a>
  </div>
</Layout>
